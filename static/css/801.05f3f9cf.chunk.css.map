{"version":3,"file":"static/css/801.05f3f9cf.chunk.css","mappings":"AAAA,KACE,QAAS,CACV,IAGC,qBAAsB,CACvB,MAOC,aAHmB,CAIpB,gBAeC,qBAAsB,CAEtB,kBAAmB,CAGnB,YAFA,eAAgB,CAFhB,YAAa,CAGb,UACY,CANd,oBAQI,WAAY,CACb,QAKD,qBAAwB,CACzB,QAIC,qBAAsB,CAUtB,uBARA,kBAAmB,CAGnB,WAAY,CAFZ,eAAgB,CAFhB,YAAa,CAGb,UAMuB,CACxB,oBAYC,SAAU,CACX,2BAIC,SAAU,CACV,kBAAqB","sources":["Css/Detail.scss"],"sourcesContent":["body {\n  margin: 0;\n}\n\ndiv {\n  box-sizing: border-box;\n}\n\n// CSS에 약간 reset시켜놓고 하는느낌 => 이건 자주쓰는거니 scss에서 @import로 응용되겟지?\n\n$title_color: #33b2ff;\n\n.scss {\n  color: $title_color;\n}\n\n// CSS 셀렉터\n\n// div h4 {\n//   color: aqua;\n// }\n//둘은 동일 즉 셀렉터가 길어지면 한눈에 파악하기 어려울수있으니 직관적으로 나눌수있다 (scss 내스팅문법)\n// div {\n//   h4 {\n//     color: aqua;\n//   }\n// }\n\n.scssV2 {\n  background-color: pink;\n  padding: 20px;\n  border-radius: 15px;\n  max-width: 400px;\n  width: 100%;\n  margin: auto;\n  p {\n    margin: auto;\n  }\n}\n//ex3\n.scssV3 {\n  @extend .scssV2;\n  background-color: yellow;\n}\n\n//함수마냥 선언한뒤 쓰고싶은곳에서 호출하는데 js하듯이 호출하지말고 @include 키워드를 붙여서 호출하면 안에내용이 return되는 느낌\n@mixin funName() {\n  background-color: pink;\n  padding: 20px;\n  border-radius: 15px;\n  max-width: 400px;\n  width: 100%;\n  margin: auto;\n}\n\n.scssV4 {\n  @include funName();\n  background-color: green;\n}\n\n/*\nSCSS를 쓰는이유 -> CSS를 프로그래밍 하듯이 짤수있다 즉 중복을 없앨수있다는거.\n\nex1) 자주쓰는 컬러코드나 일정한 픽셀값 등을 다 외우기힘드니 변수에 담아서쓰거나\nex2) 자주쓰는 템플릿은 따로 .scss파일에 저장해서 -> scss문법인 @import를 해서 쓰거나 할수있다. 마치 js import하듯이\nex3) 비슷한 템플릿의 코드는 extend 문법을통해 상속할수있다 클래스마냥 (비슷한 @mixin - @include)\n*/\n\n// CSStrainsition에서 정한 class -enter => 동작시작시 적용할 CSS\n.myTransition-enter {\n  opacity: 0;\n}\n\n// class -enter-active => 동작중에 적용할 CSS\n.myTransition-enter-active {\n  opacity: 1;\n  transition: all 500ms;\n  //변할때 딜레이를 주는느낌 -> 0.5s에 걸쳐서 변함\n}\n\n//그럼 enter에서는 투명도가 0이고 동작시에는 1이니까 0->1로 변하는 transition이겟지?\n"],"names":[],"sourceRoot":""}